#!/bin/python
import requests
import re
import sys

try:
    # Python 2.6-2.7
    from HTMLParser import HTMLParser
except ImportError:
    # Python 3
    from html.parser import HTMLParser

class colors:
    BOLD = '\033[1m'
    END = '\033[0m'

def x86(mn):
    main = "http://x86.renejeschke.de/"
    rmain = requests.get(main)
    h = HTMLParser()

    iter_lines = rmain.iter_lines()
    for l in iter_lines:
        if mn:
            mn = mn.upper()
            if "jcc" in mn.lower():
                mn = "Jcc"
            m = re.search('<td><a href="(.*?)">.*{}.*</a></td>'.format(mn), l)
            if mn and m:
                rsub = requests.get(main + m.group(1))
                print colors.BOLD + "{:<18}  {:<24}  {:<12}".format("Opcode", "Mnemonic", "Description") + colors.END
                inst_iter_lines = rsub.iter_lines()
                while True:
                    try:
                        while True:
                            instl = next(inst_iter_lines)
                            if instl.startswith('<td class="grid"><code>') and instl.endswith("</code></td>"):
                                msub = re.search('<td class="grid"><code>(.*?)</code></td>', instl)
                                break
                        opcode = msub.group(1)


                        while True:
                            instl = next(inst_iter_lines)
                            if instl.startswith('<td class="grid"><code>') and instl.endswith("</code></td>"):
                                msub = re.search('<td class="grid"><code>(.*?)</code></td>', instl)
                                break
                        mnemonic =  msub.group(1)

                        while True:
                            instl = next(inst_iter_lines)
                            if instl.startswith('<td class="grid">') and instl.endswith('</td>'):
                                msub = re.search('<td class="grid">(.*?)</td>', instl)
                                break
                        desc =  msub.group(1)
                        print "{:<18}  {:<24}  {:<12}".format(opcode, mnemonic, desc)
                    except StopIteration:
                        break
                inst_iter_lines = rsub.iter_lines()

                print "\n{}Details:{}".format(colors.BOLD, colors.END)
                # Skip till details
                while True:
                    instl = next(inst_iter_lines)
                    if instl == '<td class="instruction_set_reference_box">':
                        break

                # print details
                while True:
                    instl = next(inst_iter_lines)
                    if not instl.startswith("<p>") and not instl.endswith('</p>'):
                        break
                    print h.unescape(instl[3:-4])
                print
        else:
            m = re.search('<td><a href=".*?">(.*?)</a></td>'.format(mn), l)
            if m:
                print "{}: {}".format(m.group(1), next(iter_lines)[4:-5])

if len(sys.argv) < 2:
    print "Usage: asman arch instruction"
    exit(1)

arch = sys.argv[1]
mn = sys.argv[2] if len(sys.argv) == 3 else None
if arch == "x86":
    x86(mn)
else:
    print "Arch not yet supported"
